#!/bin/bash
# SSH with host name and IP address in background (only in iTerm.app)
# First, check to see if we have the correct terminal!
if [ "$(tty)" == 'not a tty' ] || [ "$TERM_PROGRAM" != "iTerm.app" ] ; then
  /usr/bin/ssh -o LogLevel=Error "$@"
  exit $?
fi

function __calculate_iterm_window_dimensions {
  local size=( $(osascript -e "tell application \"iTerm\"
    get bounds of current window
  end tell" | tr ',' ' ' 2>/dev/null))

  local x1=${size[0]} y1=${size[1]} x2=${size[2]} y2=${size[3]}
  # 15px - scrollbar width
  local w=$(( $x2 - $x1 - 15 ))
  # 44px - titlebar + tabs height
  local h=$(( $y2 - $y1 - 44))
  echo "${w}x${h}"
}

# Console dimensions
DIMENSIONS=$(__calculate_iterm_window_dimensions)

BG_COLOR="#000000"       # Background color
BG_COLOR_PROD="#330000"	 # Background color prod
BG_COLOR_STAG="#002200"	 # Background color stage
FG_COLOR="#662020"       # Foreground color
GRAVITY="NorthEast"      # Text gravity (NorthWest, North, NorthEast,
                         # West, Center, East, SouthWest, South, SouthEast)
OFFSET1="20,10"          # Text offset
OFFSET2="20,80"          # Text offset
FONT_SIZE="60"           # Font size in points
FONT_STYLE="Normal"      # Font style (Any, Italic, Normal, Oblique)
# Font path
FONT="$HOME/.bash/resources/SimpleLife.ttf"

HOSTNAME=`echo $@ | sed -e "s/.*@//" -e "s/ .*//"`

# RESOLVED_HOSTNAME=`nslookup $HOSTNAME|tail -n +4|grep '^Name:'|cut -f2 -d $'\t'`
# RESOLVED_IP=`nslookup $HOSTNAME|tail -n +4|grep '^Address:'|cut -f2 -d $':'|tail -c +2`
output=`dscacheutil -q host -a name $HOSTNAME`
RESOLVED_HOSTNAME=`echo -e "$output"|grep '^name:'|awk '{print $2}'`
RESOLVED_IP=`echo -e "$output"|grep '^ip_address:'|awk '{print $2}'`

BACK_COLOR=$BG_COLOR;
echo ${RESOLVED_HOSTNAME:-$HOSTNAME} | grep '.prod' >/dev/null && BACK_COLOR=$BG_COLOR_PROD;
echo ${RESOLVED_HOSTNAME:-$HOSTNAME} | grep '.stag' >/dev/null && BACK_COLOR=$BG_COLOR_STAG;

function set_bg {
  local tty=$(tty)
# Iterm <2.3
#  osascript -e "
#    tell application \"iTerm\"
#      repeat with theTerminal in terminals
#        tell theTerminal
#          try
#            tell session id \"$tty\"
#              set background image to \"$1\"
#            end tell
#          on error errmesg number errn
#          end try
#        end tell
#      end repeat
#    end tell"

#Iterm2.3:
osascript -e "
    tell application \"iTerm\"
      tell the current window
		tell the current session
		  set background image to \"$1\"
        end tell
      end tell
    end tell"
}

on_exit () {
  if [ ! -f /tmp/iTermBG.empty.png ]; then
    convert -size "$DIMENSIONS" xc:"$BG_COLOR" "/tmp/iTermBG.empty.png"
  fi
  set_bg "/tmp/iTermBG.empty.png"
  rm "/tmp/iTermBG.$$.png"
}
trap on_exit EXIT

convert \
  -size "$DIMENSIONS" xc:"$BACK_COLOR" -gravity "$GRAVITY" -fill "$FG_COLOR" -font "$FONT" -style "$FONT_STYLE" -pointsize "$FONT_SIZE" -antialias -draw "text $OFFSET1 '${RESOLVED_HOSTNAME:-$HOSTNAME}'" \
  -pointsize 30 -draw "text $OFFSET2 '${RESOLVED_IP:-}'" -alpha Off \
  "/tmp/iTermBG.$$.png"
set_bg "/tmp/iTermBG.$$.png"

username=`id -nu`
server=$1;

if [ "x$2" != "x" ]; then
	cmd=$@
#	if [ -n $2 ]; then
#		cmd="bash";
#	fi
	/usr/bin/ssh -o LogLevel=Error "$@"
	exit;
else 
	shift
    if [ "x$@" == "x" ]; then
        cmd="bash";
	else
		cmd=$@;
    fi
	/usr/bin/ssh -o LogLevel=Error -t $server "if [ -f /usr/bin/screen ]; then /usr/bin/screen -t $username -D -R -S $username \"$cmd\"; else bash; fi" 
fi
