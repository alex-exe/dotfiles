# Bash completition
if [ -n "/opt/local/etc/" ]; then
  if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
    . /opt/local/etc/profile.d/bash_completion.sh
#  if [ -f /opt/local/etc/bash_completion ]; then
#    source /opt/local/etc/bash_completion
  else
    _cecho_warning
    echo 'Bash completion is not installed in your system'
  fi
fi

if [ -f /opt/local/share/git-core/git-prompt.sh ]; then
    . /opt/local/share/git-core/git-prompt.sh
fi

_get_cword()
{
local i
local WORDBREAKS=${COMP_WORDBREAKS}
if [ -n $1 ]; then
for (( i=0; i<${#1}; ++i )); do
local char=${1:$i:1}
WORDBREAKS=${WORDBREAKS//$char/}
done
fi
local cur=${COMP_LINE:0:$COMP_POINT}
local tmp="${cur}"
local word_start=`expr "$tmp" : '.*['"${WORDBREAKS}"']'`
while [ "$word_start" -ge 2 ]; do
local char=${cur:$(( $word_start - 2 )):1}
if [ "$char" != "\\" ]; then
break
fi
tmp=${COMP_LINE:0:$(( $word_start - 2 ))}
word_start=`expr "$tmp" : '.*['"${WORDBREAKS}"']'`
done


cur=${cur:$word_start}
echo $cur
} # _get_cword()


# Git aliases completition
function _git_complete_aliases {
  local cmd shortcmd=${COMP_WORDS[0]} al old_comp_words

  # Retrieve full command for alias
  al=`alias $shortcmd`
  cmd=( ${al:(( ${#shortcmd} + 8 )):(( ${#al} - ${#shortcmd} - 9 ))} )

  # Replace short command (alias) with the full command
  COMP_WORDS=( ${cmd[@]} ${COMP_WORDS[@]:1} )
  # Shift current word index, because we have inserted something
  # in the beginning of command
  (( COMP_CWORD+=${#cmd[@]}-1 ))
  _git
}

for cmd in 'ga gb gc gcb gd gdw gci gca gf gfr gl glr glp glo gm gmt gp gs gsf gss'; do
  complete -o bashdefault -o default -o nospace -F _git_complete_aliases $cmd 2>/dev/null \
    || complete -o default -o nospace -F _git_complete_aliases $cmd 2>/dev/null
done

for i in ~/.bash/bash_completion.d/*; do
  source $i
done

